import java.util.List;
import java.util.ArrayList;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

/* @author Kate Richardson (hw03)
   @author Yuting Su (hw03 and hw07)
   @author Charlie Broadbent(hw07)
   original: 1-18-2018
   revised: 2-12-2018
   A class that implements Comparable interface to create zooAnimals.
   1/16/2018 **/

public class ZooAnimal implements Comparable<ZooAnimal>
{
    private String name;
    private String species;
    private int birthYear;
    private Integer age;
    private String img;
    private final Integer current_year = 2018;
    
    public ZooAnimal(String name, String species, int birthYear, String imageLocation)
    {
        this.name = name;
        this.species = species;
        this.birthYear = birthYear;
        this.img = imageLocation;
        this.setAge(birthYear);
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public String getName()
    {
        return name;
    }
    public void setSpecies(String species)
    {
        this.species = species;
    }

    public String getSpecies()
    {
        return species;
    }
    public void setAge(int birthYear)
    {
        Integer intage = current_year - birthYear;
        this.age = intage;  
    }

    public Integer getAge()
    {
        return age;
    }
    
    public void setImg(String img)
    {
        this.img = img;
    }

    public String getImg()
    {
        return img;
    }

    public int compareTo(ZooAnimal otherZooAnimal)
    {
        // compare species first
        int speciesresult = this.getSpecies().compareTo(otherZooAnimal.getSpecies());
        if (speciesresult > 0) 
        {
                return 1;
        }
        else if (speciesresult < 0) 
        {
            return -1;
        }
        else 
        {
            int nameresult = this.getName().compareTo(otherZooAnimal.getName());
            if (nameresult > 0) 
            {
                return 1;
            }
            else if (nameresult < 0) 
            {
                return -1;
            }
            else {
                int ageresult = this.getAge().compareTo(otherZooAnimal.getAge());
                if (ageresult > 0) 
                {
                    return 1;
                }
                else if (ageresult < 0) 
                {
                    return -1;
                }
                else 
                {
                    return 0;
                }
            }
        }
    }
    public boolean equals(ZooAnimal otherZooAnimal)
    {
        if (this.compareTo(otherZooAnimal) == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    public static void main(String[] arg)
    {
        ZooAnimal zooAnimal2 = new ZooAnimal("Lola", "lemur", 2005, "zooPics/lemur.jpg");
        ZooAnimal zooAnimal1 = new ZooAnimal("Leanne", "koala", 2000, "zooPics/koala2.jpg");
        System.out.println(zooAnimal1.compareTo(zooAnimal2));
        System.out.println(zooAnimal1.equals(zooAnimal2));
    }
}
